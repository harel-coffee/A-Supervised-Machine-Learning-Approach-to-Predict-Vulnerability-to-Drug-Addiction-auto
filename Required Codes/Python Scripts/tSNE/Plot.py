# -*- coding: utf-8 -*-
"""
Created on Thu Jun 13 08:17:24 2019

@author:Arif Shahriar 15201002
"""

import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
import pandas as pd

X=pd.read_csv("Thesis_responses_Scaled.csv")
X_processed=X.drop(['Timestamp','Flag','ID','Rehab'],axis=1)
#iris = load_iris()
#print(load_iris)
X_tsne = TSNE().fit_transform(X_processed)
X_pca = PCA().fit_transform(X_processed)

plt.figure(figsize=(10, 5))
plt.subplot(121)
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=X.Flag)
#colors = ["yellow", "purple"]
#texts = ["1.0", "0.0"]
#patches = [ plt.plot([],[], marker="o", ms=10, ls="", mec=None, color=colors[i], 
#            label="{:s}".format(texts[i]) )[0]  for i in range(len(texts)) ]
#plt.legend(handles=patches, bbox_to_anchor=(0.5, 1.0), 
#           loc='upper right', ncol=2, facecolor="plum", numpoints=1 )
#plt.show()
plt.subplot(122)
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=X.Flag)
colors = ["yellow", "purple"]
texts = ["1.0", "0.0"]
patches = [ plt.plot([],[], marker="o", ms=10, ls="", mec=None, color=colors[i], 
            label="{:s}".format(texts[i]) )[0]  for i in range(len(texts)) ]
plt.legend(handles=patches, bbox_to_anchor=(0.5, 1.0), 
           loc='upper right', ncol=2, facecolor="plum", numpoints=1 )
plt.show()

"""
Applying Truncate SVD then applying tSNE
"""

#from sklearn.decomposition import TruncatedSVD
#
#X_reduced = TruncatedSVD(n_components=30, random_state=0).fit_transform(X_processed)
#X_embedded = TSNE(n_components=2, perplexity=40, verbose=2).fit_transform(X_reduced)
#
#fig = plt.figure(figsize=(10, 10))
#import matplotlib.patches as mpatches
#ax = plt.axes(frameon=False)
#plt.setp(ax, xticks=(), yticks=())
#plt.subplots_adjust(left=0.0, bottom=0.0, right=1.0, top=0.9,
#                wspace=0.0, hspace=0.0)
#plt.scatter(X_embedded[:, 0], X_embedded[:, 1],
#        c=X.Flag, marker="o")
#plt.title('tSNE Scatter plot')
#plt.xlabel('component 1')
#plt.ylabel('component 2')
#colors = ["yellow", "purple"]
#texts = ["1.0", "0.0"]
#patches = [ plt.plot([],[], marker="o", ms=10, ls="", mec=None, color=colors[i], 
#            label="{:s}".format(texts[i]) )[0]  for i in range(len(texts)) ]
#plt.legend(handles=patches, bbox_to_anchor=(0.5, 1.0), 
#           loc='upper center', ncol=2, facecolor="plum", numpoints=1 )
#plt.show()
#plt.show()